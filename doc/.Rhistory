packages.used=c("quanteda","igraph","devtools", "factoextra","RColorBrewer")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,intersect(installed.packages()[,1],packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE,
repos='http://cran.us.r-project.org')
}
#for install a library from GitHub
library(devtools)
#readtext is not listed in CRAN yet
if (!is.element("readtext",installed.packages()[,1])){
devtools::install_github("kbenoit/readtext")
}
#load the libraries
library(readtext)
library(igraph)
library(quanteda)
library(factoextra)
library(RColorBrewer)
#the author of quanteda made a database of all the inaugural address
load("~/GitHub/Spr2017-Proj1-ciellagrange/data/data_char_inaugural.RData")
# build the corpus for all presidential speech
str(data_char_inaugural)
presi<-corpus(data_char_inaugural)
#add some features to the corpus
docvars(presi, "Year") <- as.integer(substring(names(data_char_inaugural), 1, 4))
docvars(presi, "President") <- substring(names(data_char_inaugural), 6)
#load the Hillary nomination speech for comparison
hillary<-corpus(readtext("~/GitHub/Spr2017-Proj1-ciellagrange/data/2016-Hillary.txt"))
docnames(hillary)<-"2016-Hillary"
docvars(hillary,"Year")<-2016
docvars(hillary,"President")<-"Hillary"
#make a complete corpus including Hillary
myCorpus <- presi+hillary
summary(corpus_subset(myCorpus,Year>1980))
mydfm <- dfm(presi,remove = c("will", stopwords("english")),
removePunct = TRUE)
textplot_wordcloud(mydfm,max.words = 100,colors = brewer.pal(6, "Dark2"), scale = c(4, .5))
mydfm1<-tfidf(mydfm)
textplot_wordcloud(mydfm1,max.words = 100,colors = brewer.pal(6, "Dark2"), scale = c(2, .5))
mydfm2 <- dfm(corpus_subset(presi,Year>1920),remove = c("will", stopwords("english")),
removePunct = TRUE,stem=TRUE)
x<-topfeatures(mydfm2, 1000)
write.csv(x,file="~/GitHub/Spr2017-Proj1-ciellagrange/lib/dic.csv")
economy = c("business", "grow*","pay","poverty","price","finance","bank*", "economy","economics","debt","capital","enterprise","expenditure","income","tax*","tariff","market")
employment=c("jobs","work*","employ*","unemploy*","labor")
security=c("crime","safe*","danger","military","war","weapon","violence","army","navy","defend","terroris*", "threat*","attack")
production=c("build","factory","housing","land","industry","manufacture","property","infrastructure")
geopolitics=c("friend*","enemy","hostile","abroad","foreign","domestic","alliance","europe","immigrat*")
education=c("educat*","school","student")
d<-list(economy=economy,employment=employment,security=security,production=production,geopolitics=geopolitics,education=education)
myDict <- dictionary(d)
#load a sentiment dictionary by Loughran & McDonald used in wordstat
wordstat<-dictionary(file="~/GitHub/Spr2017-Proj1-ciellagrange/lib/Loughran & McDonald 2014.cat",format="wordstat")
#conduct the topic data analysis
bycat<-dfm(corpus_subset(presi,Year>1920), dictionary = myDict,valuetype = "glob")
bycatlist<-data.frame(bycat)
print(bycatlist)
bysent<-dfm(corpus_subset(presi,Year>1920),dictionary = wordstat)
head(bysent)
bysentlist<-data.frame(bysent)
#after inspection we drop the column called "SUPERFLUOUS" because it's empty
bysentlist<-subset(bysentlist,select=-SUPERFLUOUS)
cormatrix<-cor(bycatlist,y=bycatlist,use="all.obs")
#remove the weak/negative correlation
cormatrix[cormatrix<=0.2]<-0
# build a graph from the above matrix
g <- graph.adjacency(cormatrix, weighted=TRUE, mode = "undirected")
# remove loops
g <- simplify(g)
# set labels and degrees of vertices
V(g)$label <- V(g)$name
V(g)$degree <- degree(g)
nodesize<-200*colSums(bycatlist)/sum(bycatlist)
set.seed(1111)
layout1 <- layout.fruchterman.reingold(g)
V(g)$size<-nodesize
V(g)$color<-c("tomato","gray50","gold","yellowgreen","lightblue","pink")
V(g)$label.cex <-0.4*V(g)$degree
V(g)$label.color <- "black"
V(g)$frame.color <- NA
egam <- E(g)$weight
E(g)$color <- rgb(.15, .5, 0.1, egam)
E(g)$width <- 10*egam
# plot the graph in layout1
plot(g, layout=layout1)
presDfm <- dfm(corpus_subset(presi, Year>1980)+hillary,
remove = stopwords("english"),
stem = TRUE, removePunct = TRUE)
trumpSimil <- textstat_simil(presDfm, c("2017-Trump","2016-Hillary"), n = NULL,
margin = "documents", method = "cosine")
print(dotchart(as.list(trumpSimil)$"2017-Trump", xlab = "Cosine similarity for Trump"))
print(dotchart(as.list(trumpSimil)$"2016-Hillary", xlab = "Cosine similarity for Hillary"))
totalcomb<-dfm(cbind(bycat,bysent))
head(totalcomb)
#choose the appropriate k
k <- round(sqrt(ndoc(totalcomb)/2))
clusterk <- kmeans(tf(totalcomb, "prop"), k)
split(docnames(totalcomb), clusterk$cluster)
totalcomb<-data.frame(totalcomb)
fviz_cluster(clusterk,
stand=F, repel= TRUE,data=totalcomb,
xlab="", xaxt="n",
show.clust.cent=FALSE)
unlink('project1_cache', recursive = TRUE)
packages.used=c("quanteda","igraph","devtools", "factoextra","RColorBrewer")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,intersect(installed.packages()[,1],packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE,
repos='http://cran.us.r-project.org')
}
#for install a library from GitHub
library(devtools)
#readtext is not listed in CRAN yet
if (!is.element("readtext",installed.packages()[,1])){
devtools::install_github("kbenoit/readtext")
}
#load the libraries
library(readtext)
library(igraph)
library(quanteda)
library(factoextra)
library(RColorBrewer)
#the author of quanteda made a database of all the inaugural address
load("~/GitHub/Spr2017-Proj1-ciellagrange/data/data_char_inaugural.RData")
# build the corpus for all presidential speech
str(data_char_inaugural)
presi<-corpus(data_char_inaugural)
#add some features to the corpus
docvars(presi, "Year") <- as.integer(substring(names(data_char_inaugural), 1, 4))
docvars(presi, "President") <- substring(names(data_char_inaugural), 6)
#load the Hillary nomination speech for comparison
hillary<-corpus(readtext("~/GitHub/Spr2017-Proj1-ciellagrange/data/2016-Hillary.txt"))
docnames(hillary)<-"2016-Hillary"
docvars(hillary,"Year")<-2016
docvars(hillary,"President")<-"Hillary"
#make a complete corpus including Hillary
myCorpus <- presi+hillary
summary(corpus_subset(myCorpus,Year>1980))
mydfm <- dfm(presi,remove = c("will", stopwords("english")),
removePunct = TRUE)
textplot_wordcloud(mydfm,max.words = 100,colors = brewer.pal(6, "Dark2"), scale = c(4, .5))
mydfm1<-tfidf(mydfm)
textplot_wordcloud(mydfm1,max.words = 100,colors = brewer.pal(6, "Dark2"), scale = c(2, .5))
mydfm2 <- dfm(corpus_subset(presi,Year>1920),remove = c("will", stopwords("english")),
removePunct = TRUE,stem=TRUE)
x<-topfeatures(mydfm2, 1000)
write.csv(x,file="~/GitHub/Spr2017-Proj1-ciellagrange/lib/dic.csv")
economy = c("business", "grow*","pay","poverty","price","finance","bank*", "economy","economics","debt","capital","enterprise","expenditure","income","tax*","tariff","market")
employment=c("jobs","work*","employ*","unemploy*","labor")
security=c("crime","safe*","danger","military","war","weapon","violence","army","navy","defend","terroris*", "threat*","attack")
production=c("build","factory","housing","land","industry","manufacture","property","infrastructure")
geopolitics=c("friend*","enemy","hostile","abroad","foreign","domestic","alliance","europe","immigrat*")
education=c("educat*","school","student")
d<-list(economy=economy,employment=employment,security=security,production=production,geopolitics=geopolitics,education=education)
myDict <- dictionary(d)
#load a sentiment dictionary by Loughran & McDonald used in wordstat
wordstat<-dictionary(file="~/GitHub/Spr2017-Proj1-ciellagrange/lib/Loughran & McDonald 2014.cat",format="wordstat")
#conduct the topic data analysis
bycat<-dfm(corpus_subset(presi,Year>1920), dictionary = myDict,valuetype = "glob")
bycatlist<-data.frame(bycat)
print(bycatlist)
bysent<-dfm(corpus_subset(presi,Year>1920),dictionary = wordstat)
head(bysent)
bysentlist<-data.frame(bysent)
#after inspection we drop the column called "SUPERFLUOUS" because it's empty
bysentlist<-subset(bysentlist,select=-SUPERFLUOUS)
cormatrix<-cor(bycatlist,y=bycatlist,use="all.obs")
#remove the weak/negative correlation
cormatrix[cormatrix<=0.2]<-0
# build a graph from the above matrix
g <- graph.adjacency(cormatrix, weighted=TRUE, mode = "undirected")
# remove loops
g <- simplify(g)
# set labels and degrees of vertices
V(g)$label <- V(g)$name
V(g)$degree <- degree(g)
nodesize<-200*colSums(bycatlist)/sum(bycatlist)
set.seed(1111)
layout1 <- layout.fruchterman.reingold(g)
V(g)$size<-nodesize
V(g)$color<-c("tomato","gray50","gold","yellowgreen","lightblue","pink")
V(g)$label.cex <-0.4*V(g)$degree
V(g)$label.color <- "black"
V(g)$frame.color <- NA
egam <- E(g)$weight
E(g)$color <- rgb(.15, .5, 0.1, egam)
E(g)$width <- 10*egam
# plot the graph in layout1
plot(g, layout=layout1)
presDfm <- dfm(corpus_subset(presi, Year>1980)+hillary,
remove = stopwords("english"),
stem = TRUE, removePunct = TRUE)
trumpSimil <- textstat_simil(presDfm, c("2017-Trump","2016-Hillary"), n = NULL,
margin = "documents", method = "cosine")
print(dotchart(as.list(trumpSimil)$"2017-Trump", xlab = "Cosine similarity for Trump"))
print(dotchart(as.list(trumpSimil)$"2016-Hillary", xlab = "Cosine similarity for Hillary"))
totalcomb<-dfm(cbind(bycat,bysent))
head(totalcomb)
#choose the appropriate k
k <- round(sqrt(ndoc(totalcomb)/2))
clusterk <- kmeans(tf(totalcomb, "prop"), k)
split(docnames(totalcomb), clusterk$cluster)
totalcomb<-data.frame(totalcomb)
fviz_cluster(clusterk,
stand=F, repel= TRUE,data=totalcomb,
xlab="", xaxt="n",
show.clust.cent=FALSE)
unlink('project1_cache', recursive = TRUE)
unlink('project1_final_cache', recursive = TRUE)
knit_with_parameters('~/GitHub/Spr2017-Proj1-ciellagrange/doc/project1_final.Rmd')
unlink('project1_final_cache', recursive = TRUE)
packages.used=c("quanteda","igraph","devtools", "factoextra","RColorBrewer")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,intersect(installed.packages()[,1],packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE,
repos='http://cran.us.r-project.org')
}
#for install a library from GitHub
library(devtools)
#readtext is not listed in CRAN yet
if (!is.element("readtext",installed.packages()[,1])){
devtools::install_github("kbenoit/readtext")
}
#load the libraries
library(readtext)
library(igraph)
library(quanteda)
library(factoextra)
library(RColorBrewer)
#the author of quanteda made a database of all the inaugural address
load("~/GitHub/Spr2017-Proj1-ciellagrange/data/data_char_inaugural.RData")
# build the corpus for all presidential speech
str(data_char_inaugural)
presi<-corpus(data_char_inaugural)
#add some features to the corpus
docvars(presi, "Year") <- as.integer(substring(names(data_char_inaugural), 1, 4))
docvars(presi, "President") <- substring(names(data_char_inaugural), 6)
#load the Hillary nomination speech for comparison
hillary<-corpus(readtext("~/GitHub/Spr2017-Proj1-ciellagrange/data/2016-Hillary.txt"))
docnames(hillary)<-"2016-Hillary"
docvars(hillary,"Year")<-2016
docvars(hillary,"President")<-"Hillary"
#make a complete corpus including Hillary
myCorpus <- presi+hillary
summary(corpus_subset(myCorpus,Year>1980))
mydfm <- dfm(presi,remove = c("will", stopwords("english")),
removePunct = TRUE)
textplot_wordcloud(mydfm,max.words = 100,colors = brewer.pal(6, "Dark2"), scale = c(4, .5))
mydfm1<-tfidf(mydfm)
textplot_wordcloud(mydfm1,max.words = 100,colors = brewer.pal(6, "Dark2"), scale = c(2, .5))
mydfm2 <- dfm(corpus_subset(presi,Year>1920),remove = c("will", stopwords("english")),
removePunct = TRUE,stem=TRUE)
x<-topfeatures(mydfm2, 1000)
write.csv(x,file="~/GitHub/Spr2017-Proj1-ciellagrange/lib/dic.csv")
economy = c("business", "grow*","pay","poverty","price","finance","bank*", "economy","economics","debt","capital","enterprise","expenditure","income","tax*","tariff","market")
employment=c("jobs","work*","employ*","unemploy*","labor")
security=c("crime","safe*","danger","military","war","weapon","violence","army","navy","defend","terroris*", "threat*","attack")
production=c("build","factory","housing","land","industry","manufacture","property","infrastructure")
geopolitics=c("friend*","enemy","hostile","abroad","foreign","domestic","alliance","europe","immigrat*")
education=c("educat*","school","student")
d<-list(economy=economy,employment=employment,security=security,production=production,geopolitics=geopolitics,education=education)
myDict <- dictionary(d)
#load a sentiment dictionary by Loughran & McDonald used in wordstat
wordstat<-dictionary(file="~/GitHub/Spr2017-Proj1-ciellagrange/lib/Loughran & McDonald 2014.cat",format="wordstat")
#conduct the topic data analysis
bycat<-dfm(corpus_subset(presi,Year>1920), dictionary = myDict,valuetype = "glob")
bycatlist<-data.frame(bycat)
print(bycatlist)
bysent<-dfm(corpus_subset(presi,Year>1920),dictionary = wordstat)
head(bysent)
bysentlist<-data.frame(bysent)
#after inspection we drop the column called "SUPERFLUOUS" because it's empty
bysentlist<-subset(bysentlist,select=-SUPERFLUOUS)
cormatrix<-cor(bycatlist,y=bycatlist,use="all.obs")
#remove the weak/negative correlation
cormatrix[cormatrix<=0.2]<-0
# build a graph from the above matrix
g <- graph.adjacency(cormatrix, weighted=TRUE, mode = "undirected")
# remove loops
g <- simplify(g)
# set labels and degrees of vertices
V(g)$label <- V(g)$name
V(g)$degree <- degree(g)
nodesize<-200*colSums(bycatlist)/sum(bycatlist)
set.seed(1111)
layout1 <- layout.fruchterman.reingold(g)
V(g)$size<-nodesize
V(g)$color<-c("tomato","gray50","gold","yellowgreen","lightblue","pink")
V(g)$label.cex <-0.4*V(g)$degree
V(g)$label.color <- "black"
V(g)$frame.color <- NA
egam <- E(g)$weight
E(g)$color <- rgb(.15, .5, 0.1, egam)
E(g)$width <- 10*egam
# plot the graph in layout1
plot(g, layout=layout1)
presDfm <- dfm(corpus_subset(presi, Year>1980)+hillary,
remove = stopwords("english"),
stem = TRUE, removePunct = TRUE)
trumpSimil <- textstat_simil(presDfm, c("2017-Trump","2016-Hillary"), n = NULL,
margin = "documents", method = "cosine")
print(dotchart(as.list(trumpSimil)$"2017-Trump", xlab = "Cosine similarity for Trump"))
print(dotchart(as.list(trumpSimil)$"2016-Hillary", xlab = "Cosine similarity for Hillary"))
totalcomb<-dfm(cbind(bycat,bysent))
head(totalcomb)
#choose the appropriate k
k <- round(sqrt(ndoc(totalcomb)/2))
clusterk <- kmeans(tf(totalcomb, "prop"), k)
split(docnames(totalcomb), clusterk$cluster)
totalcomb<-data.frame(totalcomb)
fviz_cluster(clusterk,
stand=F, repel= TRUE,data=totalcomb,
xlab="", xaxt="n",
show.clust.cent=FALSE)
